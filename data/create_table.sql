BEGIN;

-- Suppression des tables si elles existent déjà
DROP TABLE IF EXISTS "user", "prediction", "match", "play", "team", "own", "competition";

-- Création des tables dans le bon ordre
CREATE TABLE "competition" (
    "competition_id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) UNIQUE NOT NULL,
    "season" VARCHAR(255) NOT NULL,
    "logo" TEXT NOT NULL,
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" timestamptz
);

CREATE TABLE "team" (
    "team_id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) UNIQUE NOT NULL,
    "country" VARCHAR(255) NOT NULL,
    "city" VARCHAR(255) NOT NULL,
    "logo" TEXT,
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" timestamptz
);

CREATE TABLE "match" (
    "match_id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "competition_id" INTEGER NOT NULL,
    -- // Date au format ISO 8601
    "date" TIMESTAMPTZ NOT NULL,
    "stadium" VARCHAR(255) NOT NULL,
    "score_home" INTEGER,
    "score_away" INTEGER,
    "outcome" VARCHAR(50),
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" timestamptz,
    -- CHECK ("outcome" IN ('home', 'away', 'neutral')),
    FOREIGN KEY ("competition_id") REFERENCES "competition"("competition_id") ON DELETE CASCADE
);

CREATE TABLE "user" (
    "user_id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "first_name" VARCHAR(255),
    "last_name" VARCHAR(255),
    "pseudo" VARCHAR(255) UNIQUE NOT NULL,
    "email" VARCHAR(255) UNIQUE NOT NULL,
    "password" TEXT NOT NULL,
    "picture" TEXT DEFAULT 'https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExMmc0dWt0ZWgzdHp5eDVqd3Z1dzlsNWtramtkcWF2eTN4bnBuZGJiciZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Ov4NWitFsfRyfqdSg3/giphy.gif',
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" timestamptz
);

CREATE TABLE "prediction" (
    "prediction_id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "user_id" INTEGER NOT NULL,
    "match_id" INTEGER NOT NULL,
    "score_predi_home" INTEGER NOT NULL,
    "score_predi_away" INTEGER NOT NULL,
    "points_score" INTEGER,
    "points_outcome" INTEGER,
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" timestamptz,
    FOREIGN KEY ("user_id") REFERENCES "user"("user_id") ON DELETE CASCADE,
    FOREIGN KEY ("match_id") REFERENCES "match"("match_id") ON DELETE CASCADE,
    UNIQUE ("user_id", "match_id")
);

CREATE TABLE "play" (
    "match_id" INTEGER NOT NULL,
    "team_id" INTEGER NOT NULL,
    "role" VARCHAR(50),
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" timestamptz,
    PRIMARY KEY ("match_id", "team_id"),
    FOREIGN KEY ("match_id") REFERENCES "match"("match_id") ON DELETE CASCADE,
    FOREIGN KEY ("team_id") REFERENCES "team"("team_id") ON DELETE CASCADE
    -- CHECK ("role" IN ('home', 'away'))
);

CREATE TABLE "own" (
    "competition_id" INTEGER NOT NULL,
    "team_id" INTEGER NOT NULL,
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" timestamptz,
    PRIMARY KEY ("competition_id", "team_id"),
    FOREIGN KEY ("competition_id") REFERENCES "competition"("competition_id") ON DELETE CASCADE,
    FOREIGN KEY ("team_id") REFERENCES "team"("team_id") ON DELETE CASCADE
);

COMMIT;